#include <iostream>
#include <fstream>
#include <vector>
#include <cstdlib>
#include <ctime>
#include <algorithm>

// Функция для генерации входного файла с случайными числами
void generateInputFile(const std::string& filename) {
    std::ofstream outFile(filename);
    std::srand(std::time(nullptr));

    // Записываем 100 случайных чисел в файл
    for (int i = 0; i < 100; ++i) {
        int randomNum = std::rand() % 101 - 50; // Генерация случайного числа от -50 до 50
        outFile << randomNum << std::endl; // Запись числа в файл
    }

    outFile.close(); // Закрытие файла
}

// Функция для обработки файлов
void processFiles(const std::string& inputFilename, const std::string& outputFilename) {
    std::ifstream inFile(inputFilename); // Открытие входного файла
    std::ofstream outFile(outputFilename); // Открытие выходного файла
    std::vector<int> numbers; // Вектор для хранения чисел
    int num;

    // Считываем числа из входного файла и сохраняем их в вектор
    while (inFile >> num) {
        numbers.push_back(num);
    }

    inFile.close(); // Закрытие входного файла

    // Найти первое и последнее отрицательные числа
    int firstNegative = 0, lastNegative = 0;
    bool foundFirstNegative = false;

    for (int i = 0; i < numbers.size(); ++i) {
        if (numbers[i] < 0) {
            if (!foundFirstNegative) {
                firstNegative = numbers[i]; // Сохранение первого отрицательного числа
                foundFirstNegative = true;
            }
            lastNegative = numbers[i]; // Обновление последнего отрицательного числа
        }
    }

    int sumNegatives = firstNegative + lastNegative; // Сумма первого и последнего отрицательных чисел
    int doubleSumNegatives = sumNegatives * 2; // Удвоенная сумма этих чисел

    // Преобразование чисел и запись их в выходной файл
    for (int i = 0; i < numbers.size(); ++i) {
        if ((i + 1) % 3 == 0) { // Каждое третье число умножается на удвоенную сумму
            numbers[i] *= doubleSumNegatives;
        }
        outFile << numbers[i] << std::endl; // Запись числа в выходной файл
    }

    outFile.close(); // Закрытие выходного файла
}

int main() {
    std::string inputFilename = "input.txt";
    std::string outputFilename = "output.txt";

    generateInputFile(inputFilename); // Генерация входного файла
    processFiles(inputFilename, outputFilename); // Обработка файлов

    std::cout << "Processing complete. Check " << outputFilename << " for results." << std::endl;

    return 0;
}
